package climapp_predictor220119;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import weka.classifiers.Classifier;
import weka.classifiers.Evaluation;
import weka.classifiers.evaluation.NominalPrediction;
import weka.classifiers.trees.J48;
import weka.core.FastVector;
import weka.core.Instances;
import java.util.Random;
import weka.core.Attribute;
import weka.core.Instance;
import java.io.*;
 import java.util.Arrays;
/**
 *
 * @author jojap
 */
public class CLIMAPP_Predictor220119 {

public static BufferedReader readDataFile(String filename) {
		BufferedReader inputReader = null;
 
		try {
			inputReader = new BufferedReader(new FileReader(filename)); 
		} catch (FileNotFoundException ex) {
			System.err.println("File not found: " + filename); 
		}
		return inputReader;
	}
                                       
public static void main(String[] args) throws Exception {

// Reading the test data                 
                BufferedReader datafile_2 = readDataFile("Climapp_data_240419_tst_x_ALL.txt");
                Instances testdata = new Instances(datafile_2);
                testdata.setClassIndex(testdata.numAttributes() - 1);

                J48 j48 = new J48();
                
// Deserialization of the method, which is saved as a .ser file           
                    try {
                         FileInputStream fileIn = new FileInputStream("\j48_240419_TAORHOSRTRV.ser");
                         ObjectInputStream in = new ObjectInputStream(fileIn);
                          j48 = (J48) in.readObject();
                         in.close();
                         fileIn.close();
                         System.out.println("Algorithm succesfully read");
                         } catch (IOException i) {
                         i.printStackTrace();
                         return;
                         } catch (ClassNotFoundException c) {
                         System.out.println("j48 class not found");
                         c.printStackTrace();
                        return;
                        }
			FastVector predictions = new FastVector();
BufferedWriter br = new BufferedWriter(new FileWriter("Predicted_results_240419.csv"));
// Evaluation of the method                        
Evaluation eval = new Evaluation(testdata);
                        eval.evaluateModel(j48, testdata);
                        predictions.appendElements(eval.predictions());

// Predictions of the test data
                        System.out.println("Results:");
                        System.out.println("Indoor air temperatures in degrees Celsius [°C]");
                        
                        String[] results = new String[predictions.size()];
                        
                        for (int i = 0; i < predictions.size(); i++) {
			NominalPrediction np = (NominalPrediction) predictions.elementAt(i);
                        if (np.predicted() == 0) {
                        System.out.println("12");
                        results[i]= "12";
                        }
                        if (np.predicted() == 1) {
                        System.out.println("13");
                        results[i]= "13";
                        }
                        if (np.predicted() == 2) {
                        System.out.println("14");
                        results[i]= "14";
                        }
                        if (np.predicted() == 3) {
                        System.out.println("15");
                        results[i]= "15";
                        }
                        if (np.predicted() == 4) {
                        System.out.println("16");
                        results[i]= "16";
                        }
                        if (np.predicted() == 5) {
                        System.out.println("17");
                        results[i]= "17";
                        }
                        if (np.predicted() == 6) {
                        System.out.println("18");
                        results[i]= "18";
                        }
                        if (np.predicted() == 7) {
                        System.out.println("19");
                        results[i]= "19";
                        }
                        if (np.predicted() == 8) {
                        System.out.println("20");
                        results[i]= "20";
                        }
                        if (np.predicted() == 9) {
                        System.out.println("21");
                        results[i]= "21";
                        }
                        if (np.predicted() == 10) {
                        System.out.println("22");
                        results[i]= "22";
                        }
                        if (np.predicted() == 11) {
                        System.out.println("23");
                        results[i]= "23";
                        }
                        if (np.predicted() == 12) {
                        System.out.println("24");
                        results[i]= "24";
                        }
                        if (np.predicted() == 13) {
                        System.out.println("25");
                        results[i]= "25";
                        }
                        if (np.predicted() == 14) {
                        System.out.println("26");
                        results[i]= "26";
                        }
                        if (np.predicted() == 15) {
                        System.out.println("27");
                        results[i]= "27";
                        }
                        if (np.predicted() == 16) {
                        System.out.println("28");
                        results[i]= "28";
                        }
                        if (np.predicted() == 17) {
                        System.out.println("29");
                        results[i]= "29";
                        }
                        if (np.predicted() == 18) {
                        System.out.println("30");
                        results[i]= "30";
                        }
                        }
                        System.out.println("_____");

// Printing the results in a CSV file     

br.write(Arrays.toString(results));
br.close();

                        }
}   